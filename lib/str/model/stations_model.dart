///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class StationsModelData {
/*
{
  "branch_id": "82E1B1CA-1E5A-4043-B06F-385D7968D9A4",
  "company_id": "01634FD5-94A9-4C00-BE9F-A547A8699986",
  "branch_name": "เตาปูน",
  "branch_detail": null,
  "branch_latitude": "13.797412400000001",
  "branch_longitude": "100.2347819",
  "branch_location_radius": "20.0",
  "branch_status": "0",
  "branch_is_delete": "0",
  "branch_created_by": null,
  "branch_created_at": null,
  "branch_updated_by": null,
  "branch_updated_at": null
} 
*/

  String? branchId;
  String? companyId;
  String? branchName;
  String? branchDetail;
  String? branchLatitude;
  String? branchLongitude;
  String? branchLocationRadius;
  String? branchStatus;
  String? branchIsDelete;
  String? branchCreatedBy;
  String? branchCreatedAt;
  String? branchUpdatedBy;
  String? branchUpdatedAt;

  StationsModelData({
    this.branchId,
    this.companyId,
    this.branchName,
    this.branchDetail,
    this.branchLatitude,
    this.branchLongitude,
    this.branchLocationRadius,
    this.branchStatus,
    this.branchIsDelete,
    this.branchCreatedBy,
    this.branchCreatedAt,
    this.branchUpdatedBy,
    this.branchUpdatedAt,
  });
  StationsModelData.fromJson(Map<String, dynamic> json) {
    branchId = json['branch_id']?.toString();
    companyId = json['company_id']?.toString();
    branchName = json['branch_name']?.toString();
    branchDetail = json['branch_detail']?.toString();
    branchLatitude = json['branch_latitude']?.toString();
    branchLongitude = json['branch_longitude']?.toString();
    branchLocationRadius = json['branch_location_radius']?.toString();
    branchStatus = json['branch_status']?.toString();
    branchIsDelete = json['branch_is_delete']?.toString();
    branchCreatedBy = json['branch_created_by']?.toString();
    branchCreatedAt = json['branch_created_at']?.toString();
    branchUpdatedBy = json['branch_updated_by']?.toString();
    branchUpdatedAt = json['branch_updated_at']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['branch_id'] = branchId;
    data['company_id'] = companyId;
    data['branch_name'] = branchName;
    data['branch_detail'] = branchDetail;
    data['branch_latitude'] = branchLatitude;
    data['branch_longitude'] = branchLongitude;
    data['branch_location_radius'] = branchLocationRadius;
    data['branch_status'] = branchStatus;
    data['branch_is_delete'] = branchIsDelete;
    data['branch_created_by'] = branchCreatedBy;
    data['branch_created_at'] = branchCreatedAt;
    data['branch_updated_by'] = branchUpdatedBy;
    data['branch_updated_at'] = branchUpdatedAt;
    return data;
  }
}

class StationsModel {
/*
{
  "data": [
    {
      "branch_id": "82E1B1CA-1E5A-4043-B06F-385D7968D9A4",
      "company_id": "01634FD5-94A9-4C00-BE9F-A547A8699986",
      "branch_name": "เตาปูน",
      "branch_detail": null,
      "branch_latitude": "13.797412400000001",
      "branch_longitude": "100.2347819",
      "branch_location_radius": "20.0",
      "branch_status": "0",
      "branch_is_delete": "0",
      "branch_created_by": null,
      "branch_created_at": null,
      "branch_updated_by": null,
      "branch_updated_at": null
    }
  ],
  "message": "",
  "message_ex": "",
  "success": true,
  "errors": null
} 
*/

  List<StationsModelData?>? data;
  String? message;
  String? messageEx;
  bool? success;
  String? errors;

  StationsModel({
    this.data,
    this.message,
    this.messageEx,
    this.success,
    this.errors,
  });
  StationsModel.fromJson(Map<String, dynamic> json) {
  if (json['data'] != null) {
  final v = json['data'];
  final arr0 = <StationsModelData>[];
  v.forEach((v) {
  arr0.add(StationsModelData.fromJson(v));
  });
    this.data = arr0;
    }
    message = json['message']?.toString();
    messageEx = json['message_ex']?.toString();
    success = json['success'];
    errors = json['errors']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v!.toJson());
  });
      data['data'] = arr0;
    }
    data['message'] = message;
    data['message_ex'] = messageEx;
    data['success'] = success;
    data['errors'] = errors;
    return data;
  }
}
